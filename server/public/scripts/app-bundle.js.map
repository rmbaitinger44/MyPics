{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/gallery.js","src/resources/data/picList.js","src/resources/data/users.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","loginError","message","showLogin","showRegister","user","firstName","lastName","email","password","registerError","save","console","log","serverResponse","error","login","sessionStorage","setItem","JSON","stringify","response","navigate","catch","List","gallery","mypics","parse","getItem","showList","activate","getUserGallery","_id","back","createGallery","galleryObj","userId","description","saveGallery","alert","galleryId","filesToUpload","length","uploadFile","saveMyPics","mypicsObj","editGallery","editMyPic","getGalleryPics","deleteGallery","deleteGalleryPics","id","changeFiles","Array","push","files","removeFile","index","splice","logout","removeItem","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","Gallery","GALLERY_SERVICE","galleryArray","i","Pics","PIC_SERVICE","picArray","formData","FormData","forEach","item","pics","Users","USER_SERVICE"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n      //each one of these objects represents page or route \n      { \n\t      route: ['', 'home'],\n        //where is the file located\n        moduleId: './modules/home',\n        //Aurelia creates a menu for us\n        name: 'Home' \n      },\n      {\n\t      route: 'list',\n\t      moduleId: './modules/list',\n        name: 'List' ,\n        auth: true \n     }\n    ]);\n  }\n}\n\n","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\nimport config from './auth-config';\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n    })\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport { Users } from '../resources/data/users';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n\r\n//require and end up with variable to access\r\n@inject(Router,Users, AuthService)\r\nexport class Home {\r\n\r\n  \r\n  constructor(router, users, auth) {\r\n        this.router = router;\r\n        this.auth = auth;\r\n        this.loginError = '';    \r\n        this.users = users;        \r\n        this.message = 'Home';\r\n        this.showLogin = true;\r\n  }\r\n\r\n  \r\n  showRegister(){\r\n    //creating empty object that can receive input from user\r\n    this.user = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n    }\r\n    this.registerError = \"\";\r\n\r\n    this.showLogin = false;\r\n  }\r\n  \r\n  async save() {\r\n  console.log(this.user)\r\n          let serverResponse = await this.users.save(this.user);\r\n          if (!serverResponse.error) {\r\n            this.showLogin = true;\r\n          } else {\r\n            this.registerError = \"There was a problem registering the user.\"\r\n          }\r\n      \r\n  }\r\n  \r\n  //takes to list\r\n  login() {\r\n    return this.auth.login(this.email, this.password)\r\n      .then(response => {\r\n\tsessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n\tthis.loginError = \"\";\r\n\tthis.router.navigate('list');\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.loginError = \"Invalid credentials.\";\r\n      });\r\n  };\r\n\r\n\r\n\r\n  \r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Gallery} from '../resources/data/gallery';\r\nimport { AuthService } from 'aurelia-auth';\r\nimport {Pics} from '../resources/data/picList'\r\n\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(Router,Gallery,AuthService, Pics)\r\nexport class List {\r\n\r\n  \tconstructor(router,gallery,auth, mypics) {\r\n\t\tthis.mypics = mypics;\r\n\t\tthis.router = router;\r\n\t\tthis.message = 'List';\r\n\t\tthis.auth = auth;\r\n\t\tthis.gallery = gallery;\r\n\t\tthis.user = JSON.parse(sessionStorage.getItem('user'));\r\n\t\tthis.showList = 'galleryList';\r\n\t\t\r\n\r\n\t}\r\n\r\n  \tasync activate(){\r\n\tawait this.gallery.getUserGallery(this.user._id);\r\n\t}\r\n\r\n\r\n\tback() {\r\n\t\tthis.showList = 'galleryList';\r\n\t}\r\n\r\n  \tcreateGallery(){\t\r\n\t\tthis.galleryObj = {\r\n\t\t\tuserId: this.user._id,\r\n\t\t\tgallery: \"\",\r\n\t\t\tdescription: \"\",\t\r\n\t\t}\r\n\t\tthis.showList = 'galleryForm';\t\t\r\n  \t}\r\n\r\n  \tasync saveGallery(){\r\n\t\tif(this.galleryObj){\t\t\r\n\t\t\tlet response = await this.gallery.save(this.galleryObj);\r\n\t\t\tif(response.error){\r\n\t\t\t\talert(\"There was an error creating the Gallery\");\r\n\t\t\t} \r\n\t\t\telse {\r\n\t\t\t\tvar galleryId = response._id;\r\n\t\t\t\t                if(this.filesToUpload && this.filesToUpload.length){\r\n\t\t\t\t                    await this.gallery.uploadFile(this.filesToUpload, this.user._id, galleryId);\r\n\t\t\t\t                    this.filesToUpload = [];\r\n\t\t\t\t                }\t\t\t\t\r\n\t\t\tthis.showList = 'galleryList';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync saveMyPics(){\r\n\t\tvar mypicsObj = {gallery:this.galleryObj._id}\t\r\n\t\t\tlet response = await this.mypics.save(mypicsObj);\r\n\t\t\tif(response.error){\r\n\t\t\t\talert(\"There was an error saving pics\");\r\n\t\t\t} \r\n\t\t\telse {\r\n\t\t\t\tvar galleryId = response._id;\r\n\t\t\t\t                if(this.filesToUpload && this.filesToUpload.length){\r\n\t\t\t\t                    await this.mypics.uploadFile(this.filesToUpload, this.user._id, galleryId);\r\n\t\t\t\t                    this.filesToUpload = [];\r\n\t\t\t\t                }\t\t\t\t\r\n\t\t\tthis.showList = 'picList';\r\n\t\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\teditGallery(gallery){\r\n\r\n        this.galleryObj = gallery;\r\n        this.showList = 'galleryForm';\r\n    }\r\n\r\n\tasync editMyPic(gallery){\r\n\t\tawait this.mypics.getGalleryPics(gallery._id)\r\n\t\tthis.galleryObj = gallery;\r\n\t\tthis.showList = 'picList'\r\n\t}\r\n\r\n    deleteGallery(gallery){\r\n        this.gallery.deleteGallery(gallery._id);\r\n    }\t\r\n\t deleteGalleryPics(id){\r\n\t \tthis.mypics.deleteGalleryPics(id);\r\n\t }\t\r\n\r\n\r\n\tchangeFiles(){\r\n\t    this.filesToUpload = new Array(); \r\n\t    this.filesToUpload.push(this.files[0]);\r\n\t}\r\n\r\n\tremoveFile(index){\r\n\t    this.filesToUpload.splice(index,1);\r\n\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\tlogout(){\r\n\t\tsessionStorage.removeItem('user');\r\n\t\tthis.auth.logout();\r\n\t}\r\n}\r\n\r\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { inject } from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n\tconstructor(http) {\r\n        this.httpClient = http;\r\n        \r\n        //base URL for my RESTful services.\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'X-Requested-With': 'Fetch'\r\n                }\r\n                })\r\n                //functions that write log when request is sent (can be buffed up)\r\n                .withInterceptor({\r\n                request(request) {\r\n\t\t\t\t\tvar authHeader = 'Bearer ' + localStorage.getItem('aurelia_token')\r\n\t\t\t\t\t                    request.headers.append('Authorization', authHeader);\r\n                    console.log(`Requesting ${request.method} ${request.url}`);\r\n                    return request;\r\n                },\r\n                response(response) {\r\n                    console.log(`Received ${response.status} ${response.url}`);\r\n                    return response;\r\n                }\r\n                });\r\n            });\r\n    \r\n\t}\r\n    get(url) {\r\n\t\treturn this.httpClient.fetch(url)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n\t}\r\n    post(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n\t}\r\n    put(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'put',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n\t}\r\n    delete(url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'delete'\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error ;\r\n\t\t\t});\r\n\t}\r\n\tuploadFiles(files, url){\r\n\t\t    return this.httpClient\r\n\t\t    .fetch(url, {\r\n\t\t        method: 'post',\r\n\t\t        body: files\r\n\t\t    })\r\n\t\t    .then(response => response.json())\r\n\t\t    .then(object => {\r\n\t\t        return object;\r\n\t\t    })\r\n\t\t    .catch(error => {\r\n\t\t        return error;\r\n\t\t    });\r\n\t\t}\r\n\t\t\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Gallery {\r\n\tconstructor(data) {\r\n        this.data = data;\r\n        this.GALLERY_SERVICE = 'gallery';\r\n        this.galleryArray = [];\r\n   \t\t}\r\n\r\n    async getUserGallery(id){\r\n        let response = await this.data.get(this.GALLERY_SERVICE + \"/user/\" + id);\r\n            if(!response.error && !response.message){\r\n                this.galleryArray = response;\r\n            }\r\n    }\r\n\r\n    async deleteGallery(id){\r\n        let response = await this.data.delete(this.GALLERY_SERVICE + \"/\" + id);\r\n            if(!response.error){\r\n                for(let i = 0; i < this.galleryArray.length; i++){\r\n                    if(this.galleryArray[i]._id === id){\r\n                        this.galleryArray.splice(i,1);\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n//     async uploadFile(files, userId, galleryId){\r\n//         let formData = new FormData();\r\n//             files.forEach((item, index) => {\r\n//             formData.append(\"file\" + index, item);\r\n//                 });\r\n//         let response = await this.data.uploadFiles(formData, this.GALLERY_SERVICE + \"/upload/\" + userId + \"/\" + galleryId);\r\n//             return response;\r\n//     }\r\n        \r\n    async save(gallery){\r\n        if(gallery){\r\n             if(!gallery._id){\r\n        let serverResponse = await this.data.post(gallery, this.GALLERY_SERVICE);\r\n        if(! serverResponse.error){\r\n            this.galleryArray.push(serverResponse);\r\n        }\r\n        return serverResponse;\r\n            } \r\n        else {\r\n                    let response = await this.data.put(gallery, this.GALLERY_SERVICE + \"/\" + gallery._id);\r\n                    if(!response.error){\r\n                        // this.updateArray(response);\r\n                    }\r\n                    return response;\r\n                }\r\n        }\r\n    }\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Pics {\r\n\tconstructor(data) {\r\n        this.data = data;\r\n        this.PIC_SERVICE = 'pics';\r\n        this.picArray = [];\r\n   \t\t}   \r\n\r\n    async getGalleryPics(id){\r\n        let response = await this.data.get(this.PIC_SERVICE + \"/user/\" + id);\r\n            if(!response.error && !response.message){\r\n                this.picArray = response;\r\n            }\r\n    }\r\n\r\n    async deleteGalleryPics(id){\r\n        let response = await this.data.delete(this.PIC_SERVICE + \"/user/gallery\" + id);\r\n            if(!response.error){\r\n                for(let i = 0; i < this.picArray.length; i++){\r\n                    if(this.picArray[i]._id === id){\r\n                        this.picArray.splice(i,1);\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n     async uploadFile(files, userId, galleryId){\r\n         let formData = new FormData();\r\n             files.forEach((item, index) => {\r\n             formData.append(\"file\" + index, item);\r\n                 });\r\n         let response = await this.data.uploadFiles(formData, this.PIC_SERVICE + \"/upload/\" + userId + \"/\" + galleryId);\r\n            return response;\r\n     }\r\n        \r\n    async save(pics){\r\n        if(pics){\r\n             if(!pics._id){\r\n        let serverResponse = await this.data.post(pics, this.PIC_SERVICE);\r\n        if(! serverResponse.error){\r\n            this.picArray.push(serverResponse);\r\n        }\r\n        return serverResponse;\r\n            } \r\n        else {\r\n                    let response = await this.data.put(pics, this.PIC_SERVICE + \"/\" + gallery._id);\r\n                    if(!response.error){\r\n                        // this.updateArray(response);\r\n                    }\r\n                    return response;\r\n                }\r\n        }\r\n    }\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\n    async save(user){\r\n        if(user){\r\n        let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n         return serverResponse;\r\n }\r\n}\r\n\r\n\r\n}\r\n"],"sourceRoot":".."}